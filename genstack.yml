---
version: '3'
volumes:
    local_postgres_data: {}
    local_postgres_data_backups: {}
    local_zookeeper_data: {}
    local_kafka_data: {}
services:
    sso.local.redhat.com:
        container_name: sso.local.redhat.com
        image: quay.io/keycloak/keycloak:11.0.0
        environment:
            DB_VENDOR: h2
            PROXY_ADDRESS_FORWARDING: 'true'
            KEYCLOAK_USER: admin
            KEYCLOAK_PASSWORD: password
        expose:
            - 8443
    kcadmin:
        container_name: kcadmin
        image: python:3
        build:
            context: srv/keycloak_admin
        volumes:
            - ./srv/keycloak_admin:/app
        depends_on:
            - sso.local.redhat.com
        command: /bin/bash -c "cd /app && pip install -r requirements.txt && python -c 'from kchelper import init_realm; init_realm()' && flask run --host=0.0.0.0 --port=80"
    webroot:
        container_name: webroot
        image: nginx
        volumes:
            - ./srv/www:/usr/share/nginx/html
            - ./srv/nginx.conf.d:/etc/nginx/conf.d
            - ./srv/insights-chrome/build:/usr/share/nginx/html/apps/chrome
            - ./srv/landing-page-frontend/dist:/usr/share/nginx/html/apps/landing
            - ./srv/tower-analytics-frontend/dist:/usr/share/nginx/html/apps/automation-analytics
            - ./srv/tower-analytics-frontend/dist:/usr/share/nginx/html/ansible/automation-analytics
        command:
            - nginx-debug
            - -g
            - daemon off;
    entitlements:
        container_name: entitlements
        image: python:3
        build:
            context: srv/entitlements
        volumes:
            - ./srv/entitlements:/app
        command: /bin/bash -c "cd /app && pip install -r requirements.txt && python api.py"
    rbac:
        container_name: rbac
        image: python:3
        build:
            context: srv/rbac
        volumes:
            - ./srv/rbac:/app
        command: /bin/bash -c "cd /app && pip install -r requirements.txt && python api.py"
    prod.foo.redhat.com:
        container_name: prod.foo.redhat.com
        image: redhatinsights/insights-proxy
        ports:
            - 8443:8443
        environment:
            SPANDX_PORT: 8443
        security_opt:
            - label=disable
        extra_hosts:
            - prod.foo.redhat.com:127.0.0.1
        volumes:
            - ./srv/www/spandx.config.js:/config/spandx.config.js
    aabackend:
        container_name: aabackend
        image: python:3
        build:
            context: ./srv/aa_backend_mock
        environment:
            API_SECURE: '1'
        volumes:
            - ./srv/aa_backend_mock:/app
        command: /bin/bash -c "cd /app && pip install -r requirements.txt && python api.py"
    integration:
        container_name: integration
        image: aa_integration:latest
        build:
            context: ./srv/integration_tests
            dockerfile: Dockerfile.cypress
        volumes:
            - ./srv/tower-analytics-frontend:/app:rw
        user: node
        entrypoint: ''
        depends_on:
            - sso.local.redhat.com
            - kcadmin
            - aabackend
        command: /bin/bash -c "cd /app && npm install && ./wait_for_stack.sh && timeout -s SIGKILL 1000s npm run integration_headless"
        environment:
            CYPRESS_CLOUD_BASE_URL: https://prod.foo.redhat.com:8443
            CYPRESS_CLOUD_USERNAME: bob
            CYPRESS_CLOUD_PASSWORD: redhat1234
        ipc: host
        cap_add:
            - SYS_ADMIN
